import pandas as pd

from google.cloud import storage


data = pd.read_csv('https://controllerdata.lacity.org/api/views/g9h8-fvhu/rows.csv', low_memory=False)

df = data[data['DEPARTMENT_TITLE'] == 'CITY ATTORNEY']

grouping = {
  'ASSISTANT CITY ATTORNEY': 'ATTORNEY',
  'CHIEF ASSISTANT CITY ATTORNEY': 'ATTORNEY',
  'CITY ATTORNEY ACCOUNTING CLERK': 'NON-ATTORNEY',
  'CITY ATTORNEY ADMINISTRATIVE COORDINATOR I': 'NON-ATTORNEY',
  'CITY ATTORNEY ADMINISTRATIVE COORDINATOR II': 'NON-ATTORNEY',
  'CITY ATTORNEY ADMINISTRATIVE COORDINATOR III': 'NON-ATTORNEY',
  'CITY ATTORNEY ADMINISTRATIVE COORDINATOR IV': 'NON-ATTORNEY',
  'CITY ATTORNEY CHIEF ADMINISTRATIVE ASSISTANT': 'NON-ATTORNEY',
  'CITY ATTORNEY CHIEF INVESTIGATOR': 'ATTORNEY',
  'CITY ATTORNEY FINANCIAL MANAGER': 'NON-ATTORNEY',
  'CITY ATTORNEY INVESTIGATOR I': 'NON-ATTORNEY',
  'CITY ATTORNEY INVESTIGATOR II': 'NON-ATTORNEY',
  'CITY ATTORNEY INVESTIGATOR III': 'NON-ATTORNEY',
  'DEPUTY CITY ATTORNEY I': 'ATTORNEY',
  'DEPUTY CITY ATTORNEY II': 'ATTORNEY',
  'DEPUTY CITY ATTORNEY III': 'ATTORNEY',
  'DEPUTY CITY ATTORNEY IV': 'ATTORNEY',
  'EXECUTIVE LEGAL SECRETARY I': 'NON-ATTORNEY',
  'HEARING OFFICER CITY ATTORNEY': 'NON-ATTORNEY',
  'LEGAL ASSISTANT': 'NON-ATTORNEY',
  'LEGAL ASSISTANT I': 'NON-ATTORNEY',
  'LEGAL ASSISTANT II': 'NON-ATTORNEY',
  'LEGAL CLERK I': 'NON-ATTORNEY',
  'LEGAL CLERK II': 'NON-ATTORNEY',
  'LEGAL CLERK III': 'NON-ATTORNEY',
  'LEGAL SECRETARY I': 'NON-ATTORNEY',
  'LEGAL SECRETARY II': 'NON-ATTORNEY',
  'LEGAL SECRETARY III': 'NON-ATTORNEY',
  'PARALEGAL I': 'NON-ATTORNEY',
  'PARALEGAL II': 'NON-ATTORNEY',
  'PARALEGAL III': 'NON-ATTORNEY',
  'PRINCIPAL CLERK CITY ATTORNEY I': 'ATTORNEY',
  'PRINCIPAL CLERK CITY ATTORNEY II': 'ATTORNEY',
  'SENIOR ASSISTANT CITY ATTORNEY': 'ATTORNEY',
  'SENIOR LEGAL ASSISTANT': 'NON-ATTORNEY',
  'SENIOR LEGAL CLERK I': 'NON-ATTORNEY',
  'SENIOR LEGAL CLERK II': 'NON-ATTORNEY',
  'SENIOR LEGAL CLERK III': 'NON-ATTORNEY',
  'SENIOR WITNESS SERVICE COORDINATOR': 'NON-ATTORNEY',
  'WITNESS SERVICE COORDINATOR': 'NON-ATTORNEY',
  'SENIOR HEARING OFFICER': 'NON-ATTORNEY',
  'LAW CLERK': 'NON-ATTORNEY',
  'EXECUTIVE ASSISTANT CITY ATTORNEY': 'NON-ATTORNEY' ,
  'EXECUTIVE LEGAL SECRETARY II': 'NON-ATTORNEY'   ,
  'LAW LIBRARIAN': 'NON-ATTORNEY',
  'NEWS SECRETARY': 'NON-ATTORNEY',
  'PAYROLL SUPERVISOR I': 'NON-ATTORNEY',
  'CITY ATTORNEY': 'NON-ATTORNEY',
}


df['GROUPING'] = df['JOB_TITLE'].str.strip().replace(grouping)

cols = ["RECORD_NBR", "PAY_YEAR", "GENDER", "ETHNICITY", 'GROUPING', 'EMPLOYMENT_TYPE']


df2 = df.groupby(cols)["TOTAL_PAY"].sum().reset_index()

cols2 = ['RECORD_NBR', 'PAY_YEAR', 'GENDER', 'ETHNICITY', 'JOB_TITLE', 'GROUPING', 'EMPLOYMENT_TYPE']

df3 = df[cols2].fillna('')

df3['JOB_TITLE'] = df3.groupby(['RECORD_NBR', 'PAY_YEAR', 'GENDER', 'ETHNICITY', 'GROUPING', 'EMPLOYMENT_TYPE'])['JOB_TITLE'].transform(lambda x: ';'.join(x))

salaries = pd.merge(df2, df3, on=['RECORD_NBR', 'PAY_YEAR', 'GENDER', 'ETHNICITY', 'GROUPING', 'EMPLOYMENT_TYPE'])
salaries = salaries.drop_duplicates()

job_title_mapping = {
  'ASSISTANT CITY ATTORNEY': 'ASSISTANT CITY ATTORNEY',
  'CHIEF ASSISTANT CITY ATTORNEY': 'ASSISTANT CITY ATTORNEY',
  'CITY ATTORNEY ACCOUNTING CLERK': 'ACCOUNTING CLERK',
  'CITY ATTORNEY ADMINISTRATIVE COORDINATOR I': 'ADMINISTRATIVE COORDINATOR',
  'CITY ATTORNEY ADMINISTRATIVE COORDINATOR II': 'ADMINISTRATIVE COORDINATOR',
  'CITY ATTORNEY ADMINISTRATIVE COORDINATOR III': 'ADMINISTRATIVE COORDINATOR',
  'CITY ATTORNEY ADMINISTRATIVE COORDINATOR IV': 'ADMINISTRATIVE COORDINATOR',
  'CITY ATTORNEY CHIEF ADMINISTRATIVE ASSISTANT': 'CHIEF ADMINISTRATIVE ASSISTANT',
  'CITY ATTORNEY CHIEF INVESTIGATOR': 'CHIEF INVESTIGATOR',
  'CITY ATTORNEY FINANCIAL MANAGER': 'FINANCIAL MANAGER',
  'CITY ATTORNEY INVESTIGATOR I': 'INVESTIGATOR',
  'CITY ATTORNEY INVESTIGATOR II': 'INVESTIGATOR',
  'CITY ATTORNEY INVESTIGATOR III': 'INVESTIGATOR',
  'DEPUTY CITY ATTORNEY I': 'DEPUTY CITY ATTORNEY ',
  'DEPUTY CITY ATTORNEY II': 'DEPUTY CITY ATTORNEY ',
  'DEPUTY CITY ATTORNEY III': 'DEPUTY CITY ATTORNEY ',
  'DEPUTY CITY ATTORNEY IV': 'DEPUTY CITY ATTORNEY ',
  'EXECUTIVE LEGAL SECRETARY I': 'EXECUTIVE LEGAL SECRETARY',
  'EXECUTIVE LEGAL SECRETARY II': 'EXECUTIVE LEGAL SECRETARY',
  'EXECUTIVE LEGAL SECRETARY III': 'EXECUTIVE LEGAL SECRETARY',
  'EXECUTIVE LEGAL SECRETARY IV': 'EXECUTIVE LEGAL SECRETARY',
  'HEARING OFFICER CITY ATTORNEY': 'HEARING OFFICER',
  'LEGAL ASSISTANT': 'LEGAL ASSISTANT',
  'LEGAL ASSISTANT I': 'LEGAL ASSISTANT',
  'LEGAL ASSISTANT II': 'LEGAL ASSISTANT',
  'LEGAL ASSISTANT III': 'LEGAL ASSISTANT',
  'LEGAL ASSISTANT IV': 'LEGAL ASSISTANT',
  'LEGAL CLERK I': 'LEGAL CLERK',
  'LEGAL CLERK II': 'LEGAL CLERK',
  'LEGAL CLERK III': 'LEGAL CLERK',
  'LEGAL SECRETARY I': 'LEGAL SECRETARY',
  'LEGAL SECRETARY II': 'LEGAL SECRETARY',
  'LEGAL SECRETARY III': 'LEGAL SECRETARY',
  'PAYROLL SUPERVISOR I': 'PAYROLL SUPERVISOR',
  'PAYROLL SUPERVISOR II': 'PAYROLL SUPERVISOR',
  'PAYROLL SUPERVISOR III': 'PAYROLL SUPERVISOR',
  'PAYROLL SUPERVISOR IV': 'PAYROLL SUPERVISOR',
  'PARALEGAL I': 'PARALEGAL',
  'PARALEGAL II': 'PARALEGAL',
  'PARALEGAL III': 'PARALEGAL',
  'PRINCIPAL CLERK CITY ATTORNEY I': 'PRINCIPAL CLERK CITY ATTORNEY',
  'PRINCIPAL CLERK CITY ATTORNEY II': 'PRINCIPAL CLERK CITY ATTORNEY',
  'SENIOR ASSISTANT CITY ATTORNEY': 'ASSISTANT CITY ATTORNEY',
  'SENIOR LEGAL ASSISTANT': 'LEGAL ASSISTANT',
  'SENIOR LEGAL CLERK I': 'LEGAL CLERK',
  'SENIOR LEGAL CLERK II': 'LEGAL CLERK',
  'SENIOR WITNESS SERVICE COORDINATOR': 'WITNESS SERVICE COORDINATOR',
  'WITNESS SERVICE COORDINATOR': 'WITNESS SERVICE COORDINATOR',
}


df['JOB_TITLE_II'] = df['JOB_TITLE'].str.strip().replace(job_title_mapping)
cols_foo = ['RECORD_NBR', 'PAY_YEAR', 'GENDER', 'ETHNICITY', 'JOB_TITLE_II']
df4 = df[cols_foo]
df4 = df4.drop_duplicates()

salaries = pd.merge(salaries, df4, on=['RECORD_NBR', 'PAY_YEAR', 'GENDER', 'ETHNICITY'])
salaries = salaries.drop_duplicates()

group_ethnicity = {
  'CAUCASIAN': 'CAUCASIAN',
  'HISPANIC': 'HISPANIC',
  'ASIAN': 'ASIAN',
  'BLACK': 'BLACK',
  'FILIPINO': 'ASIAN',
  'OTHER': 'OTHER',
  'TWO OR MORE RACES': 'OTHER',
  'AMERICAN INDIAN': 'OTHER'
}

salaries['ETHNICITY'] = salaries['ETHNICITY'].str.strip().replace(group_ethnicity)

salaries['PAY_YEAR'] = salaries['PAY_YEAR'].apply(lambda x: f"{x}0101")


bucket_name = "YOUR_NAME"
fname = 'salaries.csv'

client = storage.Client()
bucket = client.get_bucket(bucket_name)
blob = storage.Blob(f"data/{fname}", bucket)
df_str = salaries.to_csv(index=False, encoding='utf-8')
blob.upload_from_string(df_str)